openapi: 3.0.1
info:
  contact:
    email: support@korewireless.com
    name: API Support
    url: http://www.korewireless.com
  description: This is an Omnicore Model and State Management server.
  title: Omnicore Model and State Management API
  version: "1.0"
servers:
- url: https://demo-api.omnicore.cloud.korewireless.com/model-state-management
paths:
  /subscriptions/{subscriptionId}/registries:
    get:
      description: Get all registries under a subscription
      operationId: getRegistries
      parameters:
      - description: Subscription ID
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Page Number
        in: query
        name: pageNumber
        schema:
          type: integer
      - description: Page Size
        in: query
        name: pageSize
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.ListDeviceRegistriesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Internal Server Error
      summary: Get All Registries
      tags:
      - registry
    post:
      description: Create a registry
      operationId: createRegistry
      parameters:
      - description: Subscription ID
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createRegistry_request'
        description: application/json
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.DeviceRegistry'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Internal Server Error
      summary: Add New Registry
      tags:
      - registry
      x-codegen-request-body-name: Registry
  /subscriptions/{subscriptionId}/registries/{registryId}:
    delete:
      description: Delete a registry
      operationId: deleteRegistry
      parameters:
      - description: Subscription ID
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Registry ID
        in: path
        name: registryId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.Info'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Internal Server Error
      summary: Remove Registry
      tags:
      - registry
    get:
      description: Get a registry
      operationId: getRegistry
      parameters:
      - description: Subscription ID
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Registry ID
        in: path
        name: registryId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.DeviceRegistry'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Internal Server Error
      summary: Get Registry
      tags:
      - registry
    patch:
      description: Update a registry
      operationId: updateRegistry
      parameters:
      - description: Subscription ID
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Registry ID
        in: path
        name: registryId
        required: true
        schema:
          type: string
      - description: "values to be updated: eventNotificationConfigs,stateNotificationConfig.pubsub_topic_name,logNotificationConfig.pubsub_topic_name,mqttConfig.mqtt_enabled_state,httpConfig.http_enabled_state,logLevel,credentials"
        in: query
        name: updateMask
        required: true
        schema:
          enum:
          - eventNotificationConfigs
          - stateNotificationConfig.pubsub_topic_name
          - logNotificationConfig.pubsub_topic_name
          - mqttConfig.mqtt_enabled_state
          - httpConfig.http_enabled_state
          - logLevel
          - credentials
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/omnicore.UpdateRegistry'
        description: application/json
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.DeviceRegistry'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Internal Server Error
      summary: Modify Registry
      tags:
      - registry
      x-codegen-request-body-name: Registry
  /subscriptions/{subscriptionId}/registries/{registryId}/bindDeviceToGateway:
    post:
      description: Bind  a device to a gateway under a registry
      operationId: bindDevice
      parameters:
      - description: Subscription ID
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Registry ID
        in: path
        name: registryId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/omnicore.bindRequest'
        description: application/json
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.Info'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Internal Server Error
      summary: Gateway - Bind a Device to Gateway
      tags:
      - device
      x-codegen-request-body-name: Device
  /subscriptions/{subscriptionId}/registries/{registryId}/bindDevicesToGateway:
    post:
      description: Bind devices to a gateway under a registry
      operationId: bindDevices
      parameters:
      - description: Subscription ID
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Registry ID
        in: path
        name: registryId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/omnicore.bindRequestIdsGateway'
        description: application/json
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.Info'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Internal Server Error
      summary: Gateway - Bind Devices to Gateway
      tags:
      - device
      x-codegen-request-body-name: Device
  /subscriptions/{subscriptionId}/registries/{registryId}/devices:
    get:
      description: Get all devices under a registry
      operationId: getDevices
      parameters:
      - description: Registry ID
        in: path
        name: registryId
        required: true
        schema:
          type: string
      - description: Subscription ID
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Page Number
        in: query
        name: pageNumber
        schema:
          type: integer
      - description: "The maximum number of devices to return in the response. If\
          \ this value is zero, the service will select a default size. "
        in: query
        name: pageSize
        schema:
          type: integer
      - description: "The fields of the Device resource to be returned to the response.\
          \ The fields id and numId are always returned, along with any other fields\
          \ specified. A comma-separated list of fully qualified names of fields.\
          \ Example: "
        in: query
        name: fieldMask
        schema:
          type: string
      - description: "A list of device string IDs. For example, ['device0', 'device12'].\
          \ If empty, this field is ignored. Maximum IDs: 10,000"
        explode: false
        in: query
        name: deviceIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "A list of device numeric IDs. If empty, this field is ignored.\
          \ Maximum IDs: 10,000."
        explode: false
        in: query
        name: deviceNumIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "If set, returns only the gateways with which the specified device\
          \ is associated. The device ID can be numeric (num_id) or the user-defined\
          \ string (id). For example, if 456 is specified, returns only the gateways\
          \ to which the device with num_id 456 is bound."
        in: query
        name: gatewayListOptions.associationsDeviceId
        schema:
          type: string
      - description: "If set, only devices associated with the specified gateway are\
          \ returned. The gateway ID can be numeric (num_id) or the user-defined string\
          \ (id). For example, if 123 is specified, only devices bound to the gateway\
          \ with num_id 123 are returned"
        in: query
        name: gatewayListOptions.associationsGatewayId
        schema:
          type: string
      - description: "If GATEWAY is specified, only gateways are returned. If NON_GATEWAY\
          \ is specified, only non-gateway devices are returned. If GATEWAY_TYPE_UNSPECIFIED\
          \ is specified, all devices are returned."
        in: query
        name: gatewayListOptions.gatewayType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.ListDevicesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Internal Server Error
      summary: Get All Devices
      tags:
      - device
    post:
      description: Create a device under a registry
      operationId: createDevice
      parameters:
      - description: Subscription ID
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Registry ID
        in: path
        name: registryId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/omnicore.NewDevice'
        description: application/json
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.Device'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Internal Server Error
      summary: Add New Device
      tags:
      - device
      x-codegen-request-body-name: Device
  /subscriptions/{subscriptionId}/registries/{registryId}/devices/{deviceId}:
    delete:
      description: Delete a device under a registry
      operationId: deleteDevice
      parameters:
      - description: Subscription ID
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Registry ID
        in: path
        name: registryId
        required: true
        schema:
          type: string
      - description: Device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.Info'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Internal Server Error
      summary: Remove Device
      tags:
      - device
    get:
      description: Get a device under a registry
      operationId: getDevice
      parameters:
      - description: Registry ID
        in: path
        name: registryId
        required: true
        schema:
          type: string
      - description: Subscription ID
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.Device'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Internal Server Error
      summary: Get Device
      tags:
      - device
    patch:
      description: Modify device under a registry
      operationId: updateDevice
      parameters:
      - description: Subscription ID
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Registry ID
        in: path
        name: registryId
        required: true
        schema:
          type: string
      - description: Device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      - description: "Required. Only updates the device fields indicated by this mask.\
          \ The field mask must not be empty, and it must not contain fields that\
          \ are immutable or only set by the server. Mutable top-level fields: credentials,log_level,\
          \ blocked, and metadata"
        in: query
        name: updateMask
        required: true
        schema:
          enum:
          - logLevel
          - blocked
          - metadata
          - credentials
          - gatewayConfig.gatewayAuthMethod
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/omnicore.UpdateDevice'
        description: application/json
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.Device'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Internal Server Error
      summary: Modify Device
      tags:
      - device
      x-codegen-request-body-name: Device
  /subscriptions/{subscriptionId}/registries/{registryId}/unbindDeviceFromGateway:
    post:
      description: UnBind  a device from a gateway under a registry
      operationId: unBindDevice
      parameters:
      - description: Subscription ID
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Registry ID
        in: path
        name: registryId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/omnicore.bindRequest'
        description: application/json
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.Info'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Internal Server Error
      summary: Gateway - UnBind a Device from Gateway
      tags:
      - device
      x-codegen-request-body-name: Device
  /subscriptions/{subscriptionId}/registries/{registryId}/unbindDevicesFromGateway:
    post:
      description: UnBind devices from a gateway under a registry
      operationId: unBindDevices
      parameters:
      - description: Subscription ID
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Registry ID
        in: path
        name: registryId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/omnicore.bindRequestIdsGateway'
        description: application/json
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.Info'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Internal Server Error
      summary: Gateway - UnBind Devices from Gateway
      tags:
      - device
      x-codegen-request-body-name: Device
  /subscriptions/{subscriptionid}/registries/{registryId}/devices/{deviceId}/communication:
    put:
      description: Blocks All Communication From A Device
      operationId: blockDeviceCommuncation
      parameters:
      - description: Subscription ID
        in: path
        name: subscriptionid
        required: true
        schema:
          type: string
      - description: Registry ID
        in: path
        name: registryId
        required: true
        schema:
          type: string
      - description: Device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/omnicore.BlockCommunicationBody'
        description: application/json
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericEmptyResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Internal Server Error
      summary: Block Device Communication
      tags:
      - device
      x-codegen-request-body-name: Device
  /subscriptions/{subscriptionid}/registries/{registryId}/devices/{deviceId}/configVersions:
    get:
      description: Get Configs Of Devices
      operationId: getConfig
      parameters:
      - description: Subscription ID
        in: path
        name: subscriptionid
        required: true
        schema:
          type: string
      - description: Registry ID
        in: path
        name: registryId
        required: true
        schema:
          type: string
      - description: Device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      - description: Device ID
        in: query
        name: numVersions
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.ListDeviceConfigVersionsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Internal Server Error
      summary: Get Config
      tags:
      - device
  /subscriptions/{subscriptionid}/registries/{registryId}/devices/{deviceId}/sendCommandToDevice:
    post:
      description: Send A Command To A Device
      operationId: sendCommandToDevice
      parameters:
      - description: Subscription ID
        in: path
        name: subscriptionid
        required: true
        schema:
          type: string
      - description: Registry ID
        in: path
        name: registryId
        required: true
        schema:
          type: string
      - description: Device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/omnicore.Command'
        description: application/json
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericEmptyResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Internal Server Error
      summary: Send Command
      tags:
      - device
      x-codegen-request-body-name: Device
  /subscriptions/{subscriptionid}/registries/{registryId}/devices/{deviceId}/sendConfigurationToDevice:
    post:
      description: Send A Config To A Device
      operationId: sendConfigurationToDevice
      parameters:
      - description: Subscription ID
        in: path
        name: subscriptionid
        required: true
        schema:
          type: string
      - description: Registry ID
        in: path
        name: registryId
        required: true
        schema:
          type: string
      - description: Device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/omnicore.Config'
        description: application/json
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.DeviceConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Internal Server Error
      summary: Send Config
      tags:
      - device
      x-codegen-request-body-name: Device
  /subscriptions/{subscriptionid}/registries/{registryId}/devices/{deviceId}/states:
    get:
      description: Get States Of Devices
      operationId: getStates
      parameters:
      - description: Subscription ID
        in: path
        name: subscriptionid
        required: true
        schema:
          type: string
      - description: Registry ID
        in: path
        name: registryId
        required: true
        schema:
          type: string
      - description: Device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      - description: "The number of states to list. States are listed in descending\
          \ order of update time. The maximum number of states retained is 10. If\
          \ this value is zero, it will return all the states available."
        in: query
        name: numStates
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.ListDeviceStatesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omnicore.GenericErrorResponse'
          description: Internal Server Error
      summary: Get States
      tags:
      - device
components:
  schemas:
    omnicore.BlockCommunicationBody:
      properties:
        isblocked:
          type: boolean
      type: object
    omnicore.Command:
      properties:
        binaryData:
          type: string
        subfolder:
          type: string
      required:
      - binaryData
      type: object
    omnicore.Config:
      properties:
        binaryData:
          type: string
        subfolder:
          type: string
        versionToUpdate:
          type: string
      required:
      - binaryData
      type: object
    omnicore.Device:
      example:
        parent: parent
        metadata:
          key: metadata
        subscriptions:
        - subscriptions
        - subscriptions
        credentials:
        - expirationTime: expirationTime
          id: id
          publicKey:
            format: RSA_PEM
            key: key
        - expirationTime: expirationTime
          id: id
          publicKey:
            format: RSA_PEM
            key: key
        lastConfigSendTime: lastConfigSendTime
        numId: numId
        lastErrorStatus:
          code: 6
          details: details
          message: message
        subscription: subscription
        capresent: true
        createdOn: createdOn
        clientOnline: true
        deviceErrors: deviceErrors
        lastErrorTime: lastErrorTime
        isGateway: true
        blocked: true
        logLevel: INFO
        lastHeartbeatTime: lastHeartbeatTime
        id: id
        state:
          binaryData: binaryData
          updateTime: updateTime
        gatewayConfig:
          gatewayType: NON_GATEWAY
          gatewayAuthMethod: GATEWAY_AUTH_METHOD_UNSPECIFIED
        registry: registry
        updatedOn: updatedOn
        lastConfigAckTime: lastConfigAckTime
        name: name
        lastEventTime: lastEventTime
        config:
          acknowledged: true
          cloudUpdateTime: cloudUpdateTime
          binaryData: binaryData
          deviceAckTime: deviceAckTime
          version: 0
        gateway:
        - gateway
        - gateway
        lastStateTime: lastStateTime
      properties:
        blocked:
          type: boolean
        capresent:
          type: boolean
        clientOnline:
          type: boolean
        config:
          $ref: '#/components/schemas/omnicore.DeviceConfig'
        createdOn:
          type: string
        credentials:
          items:
            $ref: '#/components/schemas/omnicore.DeviceCredential'
          type: array
        deviceErrors:
          type: string
        gateway:
          items:
            type: string
          type: array
        gatewayConfig:
          $ref: '#/components/schemas/omnicore.GatewayConfig'
        id:
          maxLength: 256
          minLength: 3
          type: string
        isGateway:
          type: boolean
        lastConfigAckTime:
          type: string
        lastConfigSendTime:
          type: string
        lastErrorStatus:
          $ref: '#/components/schemas/omnicore.ErrorStatus'
        lastErrorTime:
          type: string
        lastEventTime:
          type: string
        lastHeartbeatTime:
          type: string
        lastStateTime:
          type: string
        logLevel:
          enum:
          - INFO
          - ERROR
          type: string
        metadata:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
        numId:
          type: string
        parent:
          type: string
        registry:
          type: string
        state:
          $ref: '#/components/schemas/omnicore.DeviceState'
        subscription:
          type: string
        subscriptions:
          items:
            type: string
          type: array
        updatedOn:
          type: string
      required:
      - id
      - parent
      - registry
      - subscription
      type: object
    omnicore.DeviceConfig:
      example:
        acknowledged: true
        cloudUpdateTime: cloudUpdateTime
        binaryData: binaryData
        deviceAckTime: deviceAckTime
        version: 0
      properties:
        acknowledged:
          type: boolean
        binaryData:
          type: string
        cloudUpdateTime:
          type: string
        deviceAckTime:
          type: string
        version:
          type: integer
      type: object
    omnicore.DeviceCredential:
      example:
        expirationTime: expirationTime
        id: id
        publicKey:
          format: RSA_PEM
          key: key
      properties:
        expirationTime:
          description: |-
            ExpirationTime: [Optional] The time at which this credential becomes
            invalid. This credential will be ignored for new client
            authentication requests after this timestamp; however, it will not be
            automatically deleted.
          type: string
        id:
          type: string
        publicKey:
          $ref: '#/components/schemas/omnicore.PublicKeyCredential'
      type: object
    omnicore.DeviceRegistry:
      example:
        parent: parent
        logNotificationConfig:
          pubsubTopicName: pubsubTopicName
        credentials:
        - publicKeyCertificate:
            certificate: certificate
            format: X509_CERTIFICATE_PEM
            x509Details:
              subject: subject
              expiryTime: expiryTime
              startTime: startTime
              issuer: issuer
              signatureAlgorithm: signatureAlgorithm
              publicKeyType: publicKeyType
          id: id
        - publicKeyCertificate:
            certificate: certificate
            format: X509_CERTIFICATE_PEM
            x509Details:
              subject: subject
              expiryTime: expiryTime
              startTime: startTime
              issuer: issuer
              signatureAlgorithm: signatureAlgorithm
              publicKeyType: publicKeyType
          id: id
        stateNotificationConfig:
          pubsubTopicName: pubsubTopicName
        updatedOn: updatedOn
        createdOn: createdOn
        httpConfig:
          httpEnabledState: HTTP_ENABLED
        logLevel: INFO
        eventNotificationConfigs:
        - subfolderMatches: subfolderMatches
          pubsubTopicName: pubsubTopicName
        - subfolderMatches: subfolderMatches
          pubsubTopicName: pubsubTopicName
        name: name
        id: id
        numberOfDevices: 0
        numberOfGateways: 6
        mqttConfig:
          mqttEnabledState: MQTT_ENABLED
      properties:
        createdOn:
          type: string
        credentials:
          items:
            $ref: '#/components/schemas/omnicore.RegistryCredential'
          type: array
        eventNotificationConfigs:
          items:
            $ref: '#/components/schemas/omnicore.EventNotificationConfig'
          type: array
        httpConfig:
          $ref: '#/components/schemas/omnicore.HttpConfig'
        id:
          maxLength: 256
          minLength: 3
          type: string
        logLevel:
          enum:
          - INFO
          - ERROR
          type: string
        logNotificationConfig:
          $ref: '#/components/schemas/omnicore.StateNotificationConfig'
        mqttConfig:
          $ref: '#/components/schemas/omnicore.MqttConfig'
        name:
          type: string
        numberOfDevices:
          type: integer
        numberOfGateways:
          type: integer
        parent:
          type: string
        stateNotificationConfig:
          $ref: '#/components/schemas/omnicore.StateNotificationConfig'
        updatedOn:
          type: string
      required:
      - id
      - parent
      type: object
    omnicore.DeviceState:
      example:
        binaryData: binaryData
        updateTime: updateTime
      properties:
        binaryData:
          type: string
        updateTime:
          type: string
      type: object
    omnicore.ErrorFrame:
      properties:
        code:
          type: integer
        details:
          type: string
        message:
          type: string
        status:
          type: string
      required:
      - code
      - details
      - message
      - status
      type: object
    omnicore.ErrorStatus:
      example:
        code: 6
        details: details
        message: message
      properties:
        code:
          type: integer
        details:
          type: string
        message:
          type: string
      type: object
    omnicore.EventNotificationConfig:
      example:
        subfolderMatches: subfolderMatches
        pubsubTopicName: pubsubTopicName
      properties:
        pubsubTopicName:
          description: |-
            PubsubTopicName: A Cloud Pub/Sub topic name. For example,
            `projects/myProject/topics/deviceEvents`.
          type: string
        subfolderMatches:
          description: |-
            SubfolderMatches: If the subfolder name matches this string exactly,
            this configuration will be used. The string must not include the
            leading '/' character. If empty, all strings are matched. This field
            is used only for telemetry events; subfolders are not supported for
            state changes.
          type: string
      type: object
    omnicore.GatewayConfig:
      example:
        gatewayType: NON_GATEWAY
        gatewayAuthMethod: GATEWAY_AUTH_METHOD_UNSPECIFIED
      properties:
        gatewayAuthMethod:
          enum:
          - GATEWAY_AUTH_METHOD_UNSPECIFIED
          - ASSOCIATION_ONLY
          - DEVICE_AUTH_TOKEN_ONLY
          - ASSOCIATION_AND_DEVICE_AUTH_TOKEN
          type: string
        gatewayType:
          enum:
          - NON_GATEWAY
          - GATEWAY
          type: string
      type: object
    omnicore.GenericEmptyResponse:
      type: object
    omnicore.GenericErrorResponse:
      properties:
        error:
          $ref: '#/components/schemas/omnicore.ErrorFrame'
      required:
      - error
      type: object
    omnicore.HttpConfig:
      example:
        httpEnabledState: HTTP_ENABLED
      properties:
        httpEnabledState:
          description: |-
            HttpEnabledState: If enabled, allows devices to use DeviceService via
            the HTTP protocol. Otherwise, any requests to DeviceService will fail
            for this registry.

            Possible values:
              "HTTP_STATE_UNSPECIFIED" - No HTTP state specified. If not
            specified, DeviceService will be enabled by default.
              "HTTP_ENABLED" - Enables DeviceService (HTTP) service for the
            registry.
              "HTTP_DISABLED" - Disables DeviceService (HTTP) service for the
            registry.
          enum:
          - HTTP_ENABLED
          - HTTP_DISABLED
          - HTTP_STATE_UNSPECIFIED
          type: string
      type: object
    omnicore.Info:
      example:
        info: info
      properties:
        info:
          type: string
      type: object
    omnicore.ListDeviceConfigVersionsResponse:
      example:
        deviceConfigs:
        - acknowledged: true
          cloudUpdateTime: cloudUpdateTime
          binaryData: binaryData
          deviceAckTime: deviceAckTime
          version: 0
        - acknowledged: true
          cloudUpdateTime: cloudUpdateTime
          binaryData: binaryData
          deviceAckTime: deviceAckTime
          version: 0
      properties:
        deviceConfigs:
          items:
            $ref: '#/components/schemas/omnicore.DeviceConfig'
          type: array
      type: object
    omnicore.ListDeviceRegistriesResponse:
      example:
        pageNumber: 1
        deviceRegistries:
        - parent: parent
          logNotificationConfig:
            pubsubTopicName: pubsubTopicName
          credentials:
          - publicKeyCertificate:
              certificate: certificate
              format: X509_CERTIFICATE_PEM
              x509Details:
                subject: subject
                expiryTime: expiryTime
                startTime: startTime
                issuer: issuer
                signatureAlgorithm: signatureAlgorithm
                publicKeyType: publicKeyType
            id: id
          - publicKeyCertificate:
              certificate: certificate
              format: X509_CERTIFICATE_PEM
              x509Details:
                subject: subject
                expiryTime: expiryTime
                startTime: startTime
                issuer: issuer
                signatureAlgorithm: signatureAlgorithm
                publicKeyType: publicKeyType
            id: id
          stateNotificationConfig:
            pubsubTopicName: pubsubTopicName
          updatedOn: updatedOn
          createdOn: createdOn
          httpConfig:
            httpEnabledState: HTTP_ENABLED
          logLevel: INFO
          eventNotificationConfigs:
          - subfolderMatches: subfolderMatches
            pubsubTopicName: pubsubTopicName
          - subfolderMatches: subfolderMatches
            pubsubTopicName: pubsubTopicName
          name: name
          id: id
          numberOfDevices: 0
          numberOfGateways: 6
          mqttConfig:
            mqttEnabledState: MQTT_ENABLED
        - parent: parent
          logNotificationConfig:
            pubsubTopicName: pubsubTopicName
          credentials:
          - publicKeyCertificate:
              certificate: certificate
              format: X509_CERTIFICATE_PEM
              x509Details:
                subject: subject
                expiryTime: expiryTime
                startTime: startTime
                issuer: issuer
                signatureAlgorithm: signatureAlgorithm
                publicKeyType: publicKeyType
            id: id
          - publicKeyCertificate:
              certificate: certificate
              format: X509_CERTIFICATE_PEM
              x509Details:
                subject: subject
                expiryTime: expiryTime
                startTime: startTime
                issuer: issuer
                signatureAlgorithm: signatureAlgorithm
                publicKeyType: publicKeyType
            id: id
          stateNotificationConfig:
            pubsubTopicName: pubsubTopicName
          updatedOn: updatedOn
          createdOn: createdOn
          httpConfig:
            httpEnabledState: HTTP_ENABLED
          logLevel: INFO
          eventNotificationConfigs:
          - subfolderMatches: subfolderMatches
            pubsubTopicName: pubsubTopicName
          - subfolderMatches: subfolderMatches
            pubsubTopicName: pubsubTopicName
          name: name
          id: id
          numberOfDevices: 0
          numberOfGateways: 6
          mqttConfig:
            mqttEnabledState: MQTT_ENABLED
        pageSize: 5
        totalCount: 5
      properties:
        deviceRegistries:
          items:
            $ref: '#/components/schemas/omnicore.DeviceRegistry'
          type: array
        pageNumber:
          type: integer
        pageSize:
          type: integer
        totalCount:
          type: integer
      required:
      - deviceRegistries
      type: object
    omnicore.ListDeviceStatesResponse:
      example:
        deviceStates:
        - binaryData: binaryData
          updateTime: updateTime
        - binaryData: binaryData
          updateTime: updateTime
      properties:
        deviceStates:
          items:
            $ref: '#/components/schemas/omnicore.DeviceState'
          type: array
      type: object
    omnicore.ListDevicesResponse:
      example:
        pageNumber: 1
        devices:
        - parent: parent
          metadata:
            key: metadata
          subscriptions:
          - subscriptions
          - subscriptions
          credentials:
          - expirationTime: expirationTime
            id: id
            publicKey:
              format: RSA_PEM
              key: key
          - expirationTime: expirationTime
            id: id
            publicKey:
              format: RSA_PEM
              key: key
          lastConfigSendTime: lastConfigSendTime
          numId: numId
          lastErrorStatus:
            code: 6
            details: details
            message: message
          subscription: subscription
          capresent: true
          createdOn: createdOn
          clientOnline: true
          deviceErrors: deviceErrors
          lastErrorTime: lastErrorTime
          isGateway: true
          blocked: true
          logLevel: INFO
          lastHeartbeatTime: lastHeartbeatTime
          id: id
          state:
            binaryData: binaryData
            updateTime: updateTime
          gatewayConfig:
            gatewayType: NON_GATEWAY
            gatewayAuthMethod: GATEWAY_AUTH_METHOD_UNSPECIFIED
          registry: registry
          updatedOn: updatedOn
          lastConfigAckTime: lastConfigAckTime
          name: name
          lastEventTime: lastEventTime
          config:
            acknowledged: true
            cloudUpdateTime: cloudUpdateTime
            binaryData: binaryData
            deviceAckTime: deviceAckTime
            version: 0
          gateway:
          - gateway
          - gateway
          lastStateTime: lastStateTime
        - parent: parent
          metadata:
            key: metadata
          subscriptions:
          - subscriptions
          - subscriptions
          credentials:
          - expirationTime: expirationTime
            id: id
            publicKey:
              format: RSA_PEM
              key: key
          - expirationTime: expirationTime
            id: id
            publicKey:
              format: RSA_PEM
              key: key
          lastConfigSendTime: lastConfigSendTime
          numId: numId
          lastErrorStatus:
            code: 6
            details: details
            message: message
          subscription: subscription
          capresent: true
          createdOn: createdOn
          clientOnline: true
          deviceErrors: deviceErrors
          lastErrorTime: lastErrorTime
          isGateway: true
          blocked: true
          logLevel: INFO
          lastHeartbeatTime: lastHeartbeatTime
          id: id
          state:
            binaryData: binaryData
            updateTime: updateTime
          gatewayConfig:
            gatewayType: NON_GATEWAY
            gatewayAuthMethod: GATEWAY_AUTH_METHOD_UNSPECIFIED
          registry: registry
          updatedOn: updatedOn
          lastConfigAckTime: lastConfigAckTime
          name: name
          lastEventTime: lastEventTime
          config:
            acknowledged: true
            cloudUpdateTime: cloudUpdateTime
            binaryData: binaryData
            deviceAckTime: deviceAckTime
            version: 0
          gateway:
          - gateway
          - gateway
          lastStateTime: lastStateTime
        pageSize: 5
        totalCount: 5
      properties:
        devices:
          items:
            $ref: '#/components/schemas/omnicore.Device'
          type: array
        pageNumber:
          type: integer
        pageSize:
          type: integer
        totalCount:
          type: integer
      required:
      - devices
      type: object
    omnicore.MqttConfig:
      example:
        mqttEnabledState: MQTT_ENABLED
      properties:
        mqttEnabledState:
          description: |-
            MqttEnabledState: If enabled, allows connections using the MQTT
            protocol. Otherwise, MQTT connections to this registry will fail.

            Possible values:
              "MQTT_STATE_UNSPECIFIED" - No MQTT state specified. If not
            specified, MQTT will be enabled by default.
              "MQTT_ENABLED" - Enables a MQTT connection.
              "MQTT_DISABLED" - Disables a MQTT connection.
          enum:
          - MQTT_ENABLED
          - MQTT_DISABLED
          - MQTT_STATE_UNSPECIFIED
          type: string
      type: object
    omnicore.NewDevice:
      properties:
        blocked:
          type: boolean
        config:
          $ref: '#/components/schemas/omnicore.DeviceConfig'
        credentials:
          items:
            $ref: '#/components/schemas/omnicore.DeviceCredential'
          type: array
        gatewayConfig:
          $ref: '#/components/schemas/omnicore.GatewayConfig'
        id:
          maxLength: 256
          minLength: 3
          type: string
        logLevel:
          enum:
          - INFO
          - ERROR
          type: string
        metadata:
          additionalProperties:
            type: string
          type: object
      required:
      - id
      type: object
    omnicore.NewRegistry:
      properties:
        credentials:
          items:
            $ref: '#/components/schemas/omnicore.RegistryCredential'
          type: array
        eventNotificationConfigs:
          items:
            $ref: '#/components/schemas/omnicore.EventNotificationConfig'
          type: array
        httpConfig:
          $ref: '#/components/schemas/omnicore.HttpConfig'
        id:
          maxLength: 256
          minLength: 3
          type: string
        logLevel:
          enum:
          - INFO
          - ERROR
          type: string
        logNotificationConfig:
          $ref: '#/components/schemas/omnicore.StateNotificationConfig'
        mqttConfig:
          $ref: '#/components/schemas/omnicore.MqttConfig'
        stateNotificationConfig:
          $ref: '#/components/schemas/omnicore.StateNotificationConfig'
      required:
      - id
      type: object
    omnicore.PublicKeyCertificate:
      example:
        certificate: certificate
        format: X509_CERTIFICATE_PEM
        x509Details:
          subject: subject
          expiryTime: expiryTime
          startTime: startTime
          issuer: issuer
          signatureAlgorithm: signatureAlgorithm
          publicKeyType: publicKeyType
      properties:
        certificate:
          description: "Certificate: The certificate data."
          type: string
        format:
          description: |-
            Format: The certificate format.

            Possible values:
              "UNSPECIFIED_PUBLIC_KEY_CERTIFICATE_FORMAT" - The format has not
            been specified. This is an invalid default value and must not be
            used.
              "X509_CERTIFICATE_PEM" - An X.509v3 certificate
            ([RFC5280](https://www.ietf.org/rfc/rfc5280.txt)), encoded in base64,
            and wrapped by `-----BEGIN CERTIFICATE-----` and `-----END
            CERTIFICATE-----`.
          enum:
          - X509_CERTIFICATE_PEM
          type: string
        x509Details:
          $ref: '#/components/schemas/omnicore.X509CertificateDetails'
      type: object
    omnicore.PublicKeyCredential:
      example:
        format: RSA_PEM
        key: key
      properties:
        format:
          description: |-
            Format: The format of the key.

            Possible values:
              "UNSPECIFIED_PUBLIC_KEY_FORMAT" - The format has not been
            specified. This is an invalid default value and must not be used.
              "RSA_PEM" - An RSA public key encoded in base64, and wrapped by
            `-----BEGIN PUBLIC KEY-----` and `-----END PUBLIC KEY-----`. This can
            be used to verify `RS256` signatures in JWT tokens ([RFC7518](
            https://www.ietf.org/rfc/rfc7518.txt)).
              "RSA_X509_PEM" - As RSA_PEM, but wrapped in an X.509v3 certificate
            ([RFC5280]( https://www.ietf.org/rfc/rfc5280.txt)), encoded in
            base64, and wrapped by `-----BEGIN CERTIFICATE-----` and `-----END
            CERTIFICATE-----`.
              "ES256_PEM" - Public key for the ECDSA algorithm using P-256 and
            SHA-256, encoded in base64, and wrapped by `-----BEGIN PUBLIC
            KEY-----` and `-----END PUBLIC KEY-----`. This can be used to verify
            JWT tokens with the `ES256` algorithm
            ([RFC7518](https://www.ietf.org/rfc/rfc7518.txt)). This curve is
            defined in [OpenSSL](https://www.openssl.org/) as the `prime256v1`
            curve.
              "ES256_X509_PEM" - As ES256_PEM, but wrapped in an X.509v3
            certificate ([RFC5280]( https://www.ietf.org/rfc/rfc5280.txt)),
            encoded in base64, and wrapped by `-----BEGIN CERTIFICATE-----` and
            `-----END CERTIFICATE-----`.
          enum:
          - RSA_PEM
          - ES256_PEM
          - RSA_X509_PEM
          - ES256_X509_PEM
          type: string
        key:
          description: "Key: The key data."
          type: string
      required:
      - format
      type: object
    omnicore.RegistryCredential:
      example:
        publicKeyCertificate:
          certificate: certificate
          format: X509_CERTIFICATE_PEM
          x509Details:
            subject: subject
            expiryTime: expiryTime
            startTime: startTime
            issuer: issuer
            signatureAlgorithm: signatureAlgorithm
            publicKeyType: publicKeyType
        id: id
      properties:
        id:
          type: string
        publicKeyCertificate:
          $ref: '#/components/schemas/omnicore.PublicKeyCertificate'
      type: object
    omnicore.StateNotificationConfig:
      example:
        pubsubTopicName: pubsubTopicName
      properties:
        pubsubTopicName:
          description: |-
            PubsubTopicName: A Cloud Pub/Sub topic name. For example,
            `projects/myProject/topics/deviceEvents`.
          type: string
      type: object
    omnicore.UpdateDevice:
      properties:
        blocked:
          type: boolean
        credentials:
          items:
            $ref: '#/components/schemas/omnicore.DeviceCredential'
          type: array
        logLevel:
          enum:
          - INFO
          - ERROR
          type: string
        metadata:
          additionalProperties:
            type: string
          type: object
      type: object
    omnicore.UpdateRegistry:
      properties:
        credentials:
          items:
            $ref: '#/components/schemas/omnicore.RegistryCredential'
          type: array
        eventNotificationConfigs:
          items:
            $ref: '#/components/schemas/omnicore.EventNotificationConfig'
          type: array
        httpConfig:
          $ref: '#/components/schemas/omnicore.HttpConfig'
        logLevel:
          enum:
          - INFO
          - ERROR
          type: string
        logNotificationConfig:
          $ref: '#/components/schemas/omnicore.StateNotificationConfig'
        mqttConfig:
          $ref: '#/components/schemas/omnicore.MqttConfig'
        stateNotificationConfig:
          $ref: '#/components/schemas/omnicore.StateNotificationConfig'
      type: object
    omnicore.X509CertificateDetails:
      example:
        subject: subject
        expiryTime: expiryTime
        startTime: startTime
        issuer: issuer
        signatureAlgorithm: signatureAlgorithm
        publicKeyType: publicKeyType
      properties:
        expiryTime:
          description: "ExpiryTime: The time the certificate becomes invalid."
          type: string
        issuer:
          description: "Issuer: The entity that signed the certificate."
          type: string
        publicKeyType:
          description: "PublicKeyType: The type of public key in the certificate."
          type: string
        signatureAlgorithm:
          description: "SignatureAlgorithm: The algorithm used to sign the certificate."
          type: string
        startTime:
          description: "StartTime: The time the certificate becomes valid."
          type: string
        subject:
          description: "Subject: The entity the certificate and public key belong\
            \ to."
          type: string
      type: object
    omnicore.bindRequest:
      properties:
        deviceId:
          type: string
        gatewayId:
          type: string
      required:
      - deviceId
      - gatewayId
      type: object
    omnicore.bindRequestIdsGateway:
      properties:
        deviceIds:
          items:
            type: string
          type: array
        gatewayId:
          type: string
      required:
      - deviceIds
      - gatewayId
      type: object
    createRegistry_request:
      properties:
        credentials:
          items:
            $ref: '#/components/schemas/omnicore.RegistryCredential'
          type: array
        eventNotificationConfigs:
          items:
            $ref: '#/components/schemas/omnicore.EventNotificationConfig'
          type: array
        httpConfig:
          $ref: '#/components/schemas/omnicore.HttpConfig'
        id:
          maxLength: 256
          minLength: 3
          type: string
        logLevel:
          enum:
          - INFO
          - ERROR
          type: string
        logNotificationConfig:
          $ref: '#/components/schemas/omnicore.StateNotificationConfig'
        mqttConfig:
          $ref: '#/components/schemas/omnicore.MqttConfig'
        stateNotificationConfig:
          $ref: '#/components/schemas/omnicore.StateNotificationConfig'
      required:
      - id
      type: object
x-original-swagger-version: "2.0"
